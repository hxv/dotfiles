#!/usr/bin/env bash
set -e
IFS=$'\n'

DIR=$(realpath $(dirname "$0"))

DONT_FIND=()
while read FILE; do
    DONT_FIND+=("-and" "-not" "-wholename" "$DIR/$FILE")
done < "$DIR/.ignore"

SUBMODULES=$(git -C "$DIR" submodule--helper list | cut -d $'\t' -f 2)

for SUBMODULE in $SUBMODULES; do
    DONT_FIND+=("-and" "-not" "-wholename" "$DIR/$SUBMODULE")
    DONT_FIND+=("-and" "-not" "-wholename" "$DIR/$SUBMODULE/*")
done

backup() {
    NAME="$1"
    while [[ ( -e "$NAME" ) || ( -L "$NAME" ) ]]; do
        NAME+=".bkp"
    done

    echo "Backing up $1 to $NAME"

    mv "$1" "$NAME"
}

for FILE in $(find "$DIR" -mindepth 1 -type f "${DONT_FIND[@]}" -printf "%P\n"); do
    # link exists and points to right file - skip
    if [[ ( -L "$HOME/$FILE" ) && ( $(readlink -f "$HOME/$FILE") == "$DIR/$FILE" ) ]]; then
        continue
    fi

    # file exists and has identical contents - remove file
    if cmp -s "$HOME/$FILE" "$DIR/$FILE"; then
        rm "$HOME/$FILE"
    fi

    # file or link exists - move to backup location
    if [[ ( -e "$HOME/$FILE" ) || ( -L "$HOME/$FILE" ) ]]; then
        backup "$HOME/$FILE"
    fi

    # create link
    mkdir -p $(dirname "$HOME/$FILE")
    ln -s "$DIR/$FILE" "$HOME/$FILE"
done

for SUBMODULE in $SUBMODULES; do
    # link exists and points to right submodule - skip
    if [[ ( -L "$HOME/$SUBMODULE" ) && ( $(readlink -f "$HOME/$SUBMODULE") == "$DIR/$SUBMODULE" ) ]]; then
        continue
    fi

    # submodule exists - move to backup location
    # don't compare files - submodules are external and are not ment to be modified
    if [[ -e "$HOME/$SUBMODULE" ]]; then
        backup "$HOME/$SUBMODULE"
    fi

    # create link
    ln -s "$DIR/$SUBMODULE" "$HOME/$SUBMODULE"
done
