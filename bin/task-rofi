#!/usr/bin/env bash

case $1 in
    "" | "pending") filter="status:pending" ;;
    "all") filter="status:pending or status:completed" ;;
    *) echo -e "Usage: $0 [pending|all]" ; exit 1 ;;
esac

itemId=""
items=()
itemsIds=()
itemsActive=()
itemsUrgent=()
itemOffset=0

addItem () {
    itemsIds+=("$1")
    items+=("$2")

    if [[ "$3" == "1" ]]; then
        itemsActive+=("$itemOffset")
    fi

    if [[ "$4" == "1" ]]; then
        itemsUrgent+=("$itemOffset")
    fi

    itemOffset=$(( "$itemOffset" + 1 ))
}

implode () { local IFS="$1"; shift; echo "$*"; }

selectItem () {
    local IFS=$'\n'

    itemOffset=$(echo "${items[*]}" | rofi -dmenu -format i -markup-rows -u "$(implode , ${itemsUrgent[*]})" -a "$(implode , ${itemsActive[*]})")

    if [[ "$itemOffset" == "" || "$itemOffset" == "-1" ]]; then
        itemId=""
    else
        itemId="${itemsIds[$itemOffset]}"
    fi

    items=()
    itemsIds=()
    itemsActive=()
    itemsUrgent=()
    itemOffset=0
}

getText () {
    echo '' | rofi -dmenu -l 0 -separator-style "none" -p 'Description' -filter "$1"
}

while read uuid && [[ "$uuid" != "" ]]; do
    active=0
    urgent=0

    label=$(task _get "$uuid.description")

    [[ $(task _get "$uuid.start") != "" ]] && active=1
    [[ $(task _get "$uuid.status") == "completed" ]] && urgent=1

    addItem "$uuid" "$label" "$active" "$urgent"
done <<< $(task rc.verbose:nothing "rc.report.rofi.columns:uuid" "rc.report.rofi.labels:" "rc.report.rofi.filter:$filter" "rc.report.rofi.sort:start-" "rofi")

addItem "add" "<i>add</i>"

selectItem

uuid="$itemId"

if [[ "$uuid" == "" ]]; then
    exit 1
fi


if [[ "$uuid" == "add" ]]; then # adding tasks
    description=$(getText)

    [[ "$description" == "" ]] && exit 1 # no description given

    task add "$description"

    exit
fi

if [[ $(task _get "$uuid.status") == "pending" ]]; then
    if [[ $(task _get "$uuid.start") != "" ]]; then
        addItem "stop" "<i>stop</i>"
    else
        addItem "start" "<i>start</i>"
        addItem "done" "<i>done</i>"
    fi
else
    addItem "renew" "<i>renew</i>"
    addItem "delete" "<i>delete</i>"
fi

addItem "modify" "<i>modify</i>"

selectItem

action="$itemId"

if [[ "$action" == "" ]]; then
    exit 1
fi

if [[ "$action" == "modify" ]]; then
    description=$(task _get "$uuid.description")
    description=$(echo '' | rofi -dmenu -l 0 -separator-style "none" -p 'Description' -filter "$description")

    if [[ "$description" == "" ]]; then
        exit 3
    fi

    task "$uuid" modify "$description"
elif [[ "$action" == "renew" ]]; then # renewing task - update status
    task "$uuid" modify status:pending
elif [[ "$action" == "delete" ]]; then
    addItem "yes" "<i>yes</i>"
    addItem "no" "<i>no</i>"

    selectItem

    if [[ "$itemId" == "yes" ]]; then
        task "$uuid" rc.confirmation:off delete
    fi
else
    task "$uuid" "$action"
fi
